<ResourceDictionary xaml:Class="ShopManagement.Dictionary" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:xaml="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <SolidColorBrush xaml:Key="Background_Primary" Color="#121212"/>
    <SolidColorBrush xaml:Key="Background_Secondary" Color="#1E1E1E"/>
    <SolidColorBrush xaml:Key="Background_Cards" Color="#2A2A2A"></SolidColorBrush>
    <SolidColorBrush xaml:Key="Main_Foreground" Color="#EAEAEA"/>


    <Color xaml:Key="Color_Input_Default">#272727</Color>
    <Color xaml:Key="Color_Input_Hover">#333333</Color>
    <Color xaml:Key="Color_Input_Focused">#383838</Color>
    <SolidColorBrush xaml:Key="Input_Default" Color="{StaticResource Color_Input_Default}"/>
    <SolidColorBrush xaml:Key="Input_Hover" Color="{StaticResource Color_Input_Hover}"/>
    <SolidColorBrush xaml:Key="Input_Focused" Color="{StaticResource Color_Input_Focused}"/>

    <SolidColorBrush xaml:Key="Button_Accent_Default" Color="#F2F2F2"/>
    <SolidColorBrush xaml:Key="Button_Accent_Hover" Color="#FFFFFF"/>
    <SolidColorBrush xaml:Key="Button_Accent_Pressed" Color="#E0E0E0"/>
    <SolidColorBrush xaml:Key="Button_Accent_Foreground" Color="#121212"/>

    <SolidColorBrush xaml:Key="MenuButton_Hover" Color="#33FFFFFF"/>
    <SolidColorBrush xaml:Key="MenuButton_Pressed" Color="#1AFFFFFF"/>

    <FontFamily xaml:Key="Main_Font">Bahnschrift</FontFamily>

    <ContextMenu xaml:Key="Input_ContextMenu" HasDropShadow="False">
        <MenuItem Header="Вырезать" Command="Cut"/>
        <MenuItem Header="Копировать" Command="Copy"/>
        <MenuItem Header="Вставить" Command="Paste"/>
    </ContextMenu>

    <Style TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Background_Secondary}"></Setter>
    </Style>


    <Style TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource Main_Font}"></Setter>
        <Setter Property="FontSize" Value="30"></Setter>
        <Setter Property="Foreground" Value="{StaticResource Button_Accent_Foreground}"></Setter>
        <Setter Property="Background" Value="{StaticResource Button_Accent_Default}"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Button_Accent_Hover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource Button_Accent_Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style xaml:Key="Button_Menu" TargetType="Button">
        <Setter Property="Padding" Value="5"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource Main_Font}"></Setter>
        <Setter Property="FontSize" Value="30"></Setter>
        <Setter Property="Foreground" Value="{StaticResource Main_Foreground}"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource MenuButton_Hover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource MenuButton_Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource Main_Font}"></Setter>
        <Setter Property="FontSize" Value="30"></Setter>
        <Setter Property="Foreground" Value="{StaticResource Main_Foreground}"></Setter>
    </Style>


    <Style TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource Main_Font}"></Setter>
        <Setter Property="FontSize" Value="30"></Setter>
        <Setter Property="Padding" Value="5"></Setter>
        <Setter Property="Foreground" Value="{StaticResource Main_Foreground}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="{StaticResource Input_Default}"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="ContextMenu" Value="{StaticResource Input_ContextMenu}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Name="MainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                        <ScrollViewer Margin="0" Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource Input_Hover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource Input_Focused}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="PasswordBox">
        <Setter Property="FontFamily" Value="{StaticResource Main_Font}"></Setter>
        <Setter Property="FontSize" Value="30"></Setter>
        <Setter Property="Padding" Value="5"></Setter>
        <Setter Property="Foreground" Value="{StaticResource Main_Foreground}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="{StaticResource Input_Default}"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="ContextMenu" Value="{StaticResource Input_ContextMenu}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Name="MainBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                        <ScrollViewer Name="PART_ContentHost" Margin="0" Background="Transparent"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource Input_Hover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource Input_Focused}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="CheckBox">
        <Setter Property="FontFamily" Value="{StaticResource Main_Font}"></Setter>
        <Setter Property="FontSize" Value="30"></Setter>
        <Setter Property="Foreground" Value="{StaticResource Main_Foreground}"></Setter>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="#3C3C3C"></Setter>
        <Setter Property="Foreground" Value="{StaticResource Main_Foreground}"></Setter>
        <Setter Property="BorderBrush" Value="#707070"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource Main_Font}"></Setter>
        <Setter Property="FontSize" Value="30"></Setter>
        <Setter Property="RowBackground" Value="#3C3C3C"></Setter>
        <Setter Property="AlternatingRowBackground" Value="#323232"></Setter>
        <Setter Property="HorizontalGridLinesBrush" Value="#707070"></Setter>
        <Setter Property="VerticalGridLinesBrush" Value="#707070"></Setter>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="#323232"></Setter>
                    <Setter Property="BorderBrush" Value="#707070"></Setter>
                    <Setter Property="BorderThickness" Value="1"></Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <EventSetter Event="LostFocus" Handler="DataGrid_LostFocus"></EventSetter>
    </Style>


    <Style TargetType="ScrollBar">
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu Visibility="Collapsed"/>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="DatePicker">
        <Setter Property="FontFamily" Value="{StaticResource Main_Font}"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Foreground" Value="{StaticResource Main_Foreground}"></Setter>
        <Setter Property="Background" Value="{StaticResource Input_Default}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePicker">
                    <Border Name="MainBorder" CornerRadius="10" Padding="5" Background="{TemplateBinding Background}" Cursor="Hand">
                        <DatePickerTextBox Name="PART_TextBox" Text="{TemplateBinding SelectedDate}" Background="{Binding Path=Background, ElementName=MainBorder}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Cursor="Hand">
                            <DatePickerTextBox.Template>
                                <ControlTemplate TargetType="DatePickerTextBox">
                                    <Border Name="Bd"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">
                                        <ScrollViewer Name="PART_ContentHost"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </DatePickerTextBox.Template>
                        </DatePickerTextBox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource Input_Hover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource Input_Focused}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush xaml:Key="ComboBox.Static.Background" Color="{StaticResource Color_Input_Default}" />

    <SolidColorBrush xaml:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
    <SolidColorBrush xaml:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
    <SolidColorBrush xaml:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush xaml:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
    <SolidColorBrush xaml:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush xaml:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush xaml:Key="ComboBox.MouseOver.Background" Color="{StaticResource Color_Input_Hover}"></SolidColorBrush>
    <SolidColorBrush xaml:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush xaml:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
    <SolidColorBrush xaml:Key="ComboBox.MouseOver.Editable.Background" Color="{StaticResource Color_Input_Hover}"/>
    <SolidColorBrush xaml:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush xaml:Key="ComboBox.MouseOver.Editable.Button.Background" Color="{StaticResource Color_Input_Hover}"/>
    <SolidColorBrush xaml:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush xaml:Key="ComboBox.Pressed.Background" Color="{StaticResource Color_Input_Focused}"/>
    <SolidColorBrush xaml:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
    <SolidColorBrush xaml:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
    <SolidColorBrush xaml:Key="ComboBox.Pressed.Editable.Background" Color="{StaticResource Color_Input_Focused}"/>
    <SolidColorBrush xaml:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
    <SolidColorBrush xaml:Key="ComboBox.Pressed.Editable.Button.Background" Color="{StaticResource Color_Input_Focused}"/>
    <SolidColorBrush xaml:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
    <SolidColorBrush xaml:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush xaml:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush xaml:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
    <SolidColorBrush xaml:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush xaml:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush xaml:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush xaml:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
    <Style xaml:Key="ComboBoxToggleButton" TargetType="{xaml:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{xaml:Type ToggleButton}">
                    <Border xaml:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <Border xaml:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {xaml:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <TextBlock xaml:Name="arrow" Text="▼" FontSize="10" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={xaml:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={xaml:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={xaml:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={xaml:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={xaml:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                       
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={xaml:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={xaml:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate xaml:Key="ComboBoxTemplate1" TargetType="{xaml:Type ComboBox}">
        <Grid xaml:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {xaml:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup xaml:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {xaml:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome xaml:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border xaml:Name="dropDownBorder" Background="{DynamicResource {xaml:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {xaml:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                        <ScrollViewer xaml:Name="DropDownScrollViewer">
                            <Grid xaml:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas xaml:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle xaml:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter xaml:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton xaml:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter xaml:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="false">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style xaml:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="FontFamily" Value="{StaticResource Main_Font}"></Setter>
        <Setter Property="FontSize" Value="30"></Setter>
        <Setter Property="Foreground" Value="{StaticResource Main_Foreground}"></Setter>
        <Setter Property="Background" Value="{StaticResource Input_Default}"></Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Background" Value="{StaticResource Input_Default}"></Setter>
                    <Setter Property="Foreground" Value="{StaticResource Main_Foreground}"></Setter>
                    <Setter Property="FontFamily" Value="{StaticResource Main_Font}"></Setter>
                    <Setter Property="FontSize" Value="30"></Setter>
                    <Setter Property="Padding" Value="5"></Setter>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Border"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource Input_Focused}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource Input_Hover}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate1}"></Setter>
    </Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxStyle}"></Style>

    
</ResourceDictionary>